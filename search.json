[{"path":"http://www.ekotov.pro/mapineqr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 mapineqr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.ekotov.pro/mapineqr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Egor Kotov. Author, maintainer.","code":""},{"path":"http://www.ekotov.pro/mapineqr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kotov E (2024). mapineqr. Access Mapineq inequality indicators via API. doi:10.32614/CRAN.package.mapineqr, https://github.com/e-kotov/mapineqr. Mills M, Leasure D (2024). “Mapineq Link: Geospatial Dashboard Database.” doi:10.5281/zenodo.13864000.","code":"@Manual{mapineqr,   title = {mapineqr. Access Mapineq inequality indicators via API},   author = {Egor Kotov},   year = {2024},   url = {https://github.com/e-kotov/mapineqr},   doi = {10.32614/CRAN.package.mapineqr}, } @Misc{mapineq_link,   title = {Mapineq Link: Geospatial Dashboard and Database},   author = {Melinda C Mills and Douglas Leasure},   year = {2024},   month = {October},   publisher = {Mapineq deliverables. Turku: INVEST Research Flagship Centre / University of Turku},   doi = {10.5281/zenodo.13864000}, }"},{"path":"http://www.ekotov.pro/mapineqr/index.html","id":"mapineqr","dir":"","previous_headings":"","what":"Access Mapineq inequality indicators via API","title":"Access Mapineq inequality indicators via API","text":"R package access data https://www.mapineq.org/ API dashboard (product Mapineq proejct)","code":""},{"path":"http://www.ekotov.pro/mapineqr/index.html","id":"mapineqr-1","dir":"","previous_headings":"","what":"mapineqr","title":"Access Mapineq inequality indicators via API","text":"goal mapineqr access data Mapineq.org API dashboard (product Mapineq proejct).","code":""},{"path":"http://www.ekotov.pro/mapineqr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access Mapineq inequality indicators via API","text":"can install development version mapineqr GitHub :","code":"if (!require(\"pak\")) install.packages(\"pak\") pak::pak(\"e-kotov/mapineqr\") # load packages used in the examples on this page library(mapineqr) library(dplyr) library(ggplot2) library(eurostat) library(sf) library(biscale)"},{"path":"http://www.ekotov.pro/mapineqr/index.html","id":"basic-example---univariate-data-and-maps","dir":"","previous_headings":"","what":"Basic Example - univariate data and maps","title":"Access Mapineq inequality indicators via API","text":"Get full list available data NUTS 3 level: Select data source source_name column check ’s year NUTS level coverage: Check available filters data source: Choose indicator filter (let burglaries) get data: Map indicator using NUTS2 polygons:","code":"library(mapineqr)  available_data <- mi_sources(level = \"3\") head(available_data) # A tibble: 52 × 3    source_name    short_description      description                                                             <chr>          <chr>                  <chr>                                                                 1 DEMO_R_D3AREA  \"Area by NUTS 3 regio\" Area by NUTS 3 region (ESTAT)                                         2 PROJ_19RAASFR3 \"Assumptions for fert\" Assumptions for fertility rates by age, type of projection and NUTS…  3 PROJ_19RAASMR3 \"Assumptions for prob\" Assumptions for probability of dying by age, sex, type of projectio…  4 BD_HGNACE2_R3  \"Business demography \" Business demography and high growth enterprise by NACE Rev. 2 and N…  5 BD_SIZE_R3     \"Business demography \" Business demography by size class and NUTS 3 regions (ESTAT)          6 CENS_11DWOB_R3 \"Conventional dwellin\" Conventional dwellings by occupancy status, type of building and NU…  7 CRIM_GEN_REG   \"Crimes recorded by t\" Crimes recorded by the police by NUTS 3 regions (ESTAT)               8 DEMO_R_MAGEC3  \"Deaths by age group,\" Deaths by age group, sex and NUTS 3 region (ESTAT)                    9 DEMO_R_MWK3_T  \"Deaths by week and N\" Deaths by week and NUTS 3 region (ESTAT)                             10 DEMO_R_MWK3_TS \"Deaths by week, sex \" Deaths by week, sex and NUTS 3 region (ESTAT)                        # ℹ 42 more rows # ℹ Use `print(n = ...)` to see more rows mi_source_coverage(\"CRIM_GEN_REG\") # A tibble: 10 × 5    nuts_level year  source_name  short_description    description                                                <chr>      <chr> <chr>        <chr>                <chr>                                                    1 0          2008  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT)  2 0          2009  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT)  3 0          2010  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT)  4 1          2008  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT)  5 1          2009  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT)  6 1          2010  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT)  7 2          2008  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT)  8 2          2009  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT)  9 2          2010  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT) 10 3          2008  CRIM_GEN_REG Crimes recorded by t Crimes recorded by the police by NUTS 3 regions (ESTAT) mi_source_filters(\"CRIM_GEN_REG\", year = 2010, level = \"2\") # A tibble: 6 × 4   field field_label                                                           label                                    value        <chr> <chr>                                                                 <chr>                                    <chr>      1 unit  Unit of measure                                                       Number                                   NR         2 freq  Time frequency                                                        Annual                                   A          3 iccs  International classification of crime for statistical purposes (ICCS) Intentional homicide                     ICCS0101   4 iccs  International classification of crime for statistical purposes (ICCS) Robbery                                  ICCS0401   5 iccs  International classification of crime for statistical purposes (ICCS) Burglary of private residential premises ICCS05012  6 iccs  International classification of crime for statistical purposes (ICCS) Theft of a motorized land vehicle        ICCS050211 x <- mi_data(x_source = \"CRIM_GEN_REG\", year = 2010, level = \"2\", x_filters = list(iccs = \"ICCS05012\")) head(x) # A tibble: 6 × 4   best_year geo   geo_name             x   <chr>     <chr> <chr>            <int> 1 2008      AT11  Burgenland (A)     223 2 2008      AT12  Niederösterreich  2557 3 2008      AT13  Wien              9319 4 2008      AT21  Kärnten            507 5 2008      AT22  Steiermark        1163 6 2008      AT31  Oberösterreich     988 library(eurostat) library(ggplot2)  # load NUTS2 level polygons nuts2 <- eurostat::get_eurostat_geospatial(nuts_level = 2, year = \"2010\", crs = \"4326\")  # join data to NUTS2 polygons nuts2_crime <- nuts2 |>    left_join(x, by = \"geo\")  # plot a map of burglaries map_burglaries <- ggplot(nuts2_crime) +   geom_sf(aes(fill = x)) +   scale_fill_viridis_c() +   labs(title = \"Number of burglaries of private residential premises in 2010\") +   theme_minimal()  ggsave(\"man/figures/map_burglaries.png\", map_burglaries, width = 8, height = 6, dpi = 200, create.dir = TRUE)"},{"path":"http://www.ekotov.pro/mapineqr/index.html","id":"advanced-example---bivariate-data-and-maps","dir":"","previous_headings":"","what":"Advanced Example - bivariate data and maps","title":"Access Mapineq inequality indicators via API","text":"Select two indicators. Let (1) unemployment rate: (2) life expectancy: Check available filters: Get data two indicators: Plot scratterplot: Add bivariate data NUTS2 polygons create plot:","code":"mi_source_coverage(\"TGS00010\") |> dplyr::arrange(desc(year)) # A tibble: 12 × 5    nuts_level year  source_name short_description    description                                    <chr>      <chr> <chr>       <chr>                <chr>                                        1 2          2022  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT)  2 2          2021  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT)  3 2          2020  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT)  4 2          2019  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT)  5 2          2018  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT)  6 2          2017  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT)  7 2          2016  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT)  8 2          2015  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT)  9 2          2014  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT) 10 2          2013  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT) 11 2          2012  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT) 12 2          2011  TGS00010    Unemployment rate by Unemployment rate by NUTS 2 regions (ESTAT) mi_source_coverage(\"DEMO_R_MLIFEXP\") |> dplyr::arrange(desc(year)) # A tibble: 96 × 5    nuts_level year  source_name    short_description    description                                              <chr>      <chr> <chr>          <chr>                <chr>                                                  1 0          2021  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT)  2 1          2021  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT)  3 2          2021  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT)  4 0          2020  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT)  5 1          2020  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT)  6 2          2020  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT)  7 0          2019  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT)  8 1          2019  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT)  9 2          2019  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT) 10 0          2018  DEMO_R_MLIFEXP Life expectancy by a Life expectancy by age, sex and NUTS 2 region (ESTAT) # ℹ 86 more rows # ℹ Use `print(n = ...)` to see more rows mi_source_filters(\"TGS00010\", year = 2018, level = \"2\") # A tibble: 12 × 4    field   field_label                                                     label                                                                      value     <chr>   <chr>                                                           <chr>                                                                      <chr>   1 unit    Unit of measure                                                 Percentage                                                                 PC      2 isced11 International Standard Classification of Education (ISCED 2011) All ISCED 2011 levels                                                      TOTAL   3 isced11 International Standard Classification of Education (ISCED 2011) Less than primary, primary and lower secondary education (levels 0-2)      ED0-2   4 isced11 International Standard Classification of Education (ISCED 2011) Upper secondary and post-secondary non-tertiary education (levels 3 and 4) ED3_4   5 isced11 International Standard Classification of Education (ISCED 2011) Tertiary education (levels 5-8)                                            ED5-8   6 isced11 International Standard Classification of Education (ISCED 2011) Unknown                                                                    UNK     7 isced11 International Standard Classification of Education (ISCED 2011) No response                                                                NRP     8 sex     Sex                                                             Total                                                                      T       9 sex     Sex                                                             Males                                                                      M      10 sex     Sex                                                             Females                                                                    F      11 freq    Time frequency                                                  Annual                                                                     A      12 age     Age class                                                       15 years or over                                                           Y_GE15 mi_source_filters(\"DEMO_R_MLIFEXP\", year = 2018, level = \"2\") |> print(n=90) # A tibble: 91 × 4    field field_label     label            value    <chr> <chr>           <chr>            <chr>  1 unit  Unit of measure Year             YR     2 sex   Sex             Total            T      3 sex   Sex             Males            M      4 sex   Sex             Females          F      5 freq  Time frequency  Annual           A      6 age   Age class       Less than 1 year Y_LT1  7 age   Age class       1 year           Y1     8 age   Age class       2 years          Y2     9 age   Age class       3 years          Y3    10 age   Age class       4 years          Y4    11 age   Age class       5 years          Y5    12 age   Age class       6 years          Y6    13 age   Age class       7 years          Y7    14 age   Age class       8 years          Y8    15 age   Age class       9 years          Y9    16 age   Age class       10 years         Y10   17 age   Age class       11 years         Y11   ... xy_data <- mi_data(   year = 2018,   level = \"2\",   x_source = \"TGS00010\", x_filters = list(isced11 = \"TOTAL\", unit = \"PC\", age = \"Y_GE15\", sex = \"T\", freq = \"A\"),   y_source = \"DEMO_R_MLIFEXP\", y_filters = list(unit = \"YR\", age = \"Y_LT1\", sex = \"T\", freq = \"A\") ) edu_v_life_exp_plot <- ggplot(xy_data, aes(x = x, y = y)) +   geom_point() +   labs(x = \"Percentage of all adults aged 15 years or over with a degree\", y = \"Life expectancy at birth\") +   theme_minimal() # ggsave(\"man/figures/edu_v_life_exp_plot.png\", edu_v_life_exp_plot, width = 8, height = 6, units = \"in\", dpi = 300) nuts2 <- eurostat::get_eurostat_geospatial(nuts_level = 2, year = \"2016\", crs = \"4326\") nuts2_edu_v_life_exp <- nuts2 |>   left_join(xy_data, by = \"geo\") library(biscale) bidata <- bi_class(nuts2_edu_v_life_exp, x = x, y = y, style = \"quantile\", dim = 3)  legend <- bi_legend(pal = \"GrPink\",                     dim = 3,                     xlab = \"              Higher % with a degree\",                     ylab = \"              Higher life expectancy\",                     size = 8) map <- ggplot() +   geom_sf(data = bidata, mapping = aes(fill = bi_class), color = \"white\", size = 0.1, show.legend = FALSE) +   bi_scale_fill(pal = \"GrPink\", dim = 3) +   labs(     title = \"Education vs Life Expectancy\"   ) +   bi_theme()  png(\"man/figures/edu_v_life_exp_map.png\", width = 8, height = 6, units = \"in\", res = 300) print(map) print(legend, vp = grid::viewport(x = 0.4, y = .75, width = 0.2, height = 0.2, angle = -45)) dev.off()"},{"path":"http://www.ekotov.pro/mapineqr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Access Mapineq inequality indicators via API","text":"cite R package data publications use: Kotov E (2024). mapineqr. Access Mapineq inequality indicators via API. doi:10.32614/CRAN.package.mapineqr https://doi.org/10.32614/CRAN.package.mapineqr, https://github.com/e-kotov/mapineqr. Mills M, Leasure D (2024). “Mapineq Link: Geospatial Dashboard Database.” doi:10.5281/zenodo.13864000 https://doi.org/10.5281/zenodo.13864000. BibTeX:","code":"@Manual{mapineqr,   title = {mapineqr. Access Mapineq inequality indicators via API},   author = {Egor Kotov},   year = {2024},   url = {https://github.com/e-kotov/mapineqr},   doi = {10.32614/CRAN.package.mapineqr}, }  @Misc{mapineq_link,   title = {Mapineq Link: Geospatial Dashboard and Database},   author = {Melinda C Mills and Douglas Leasure},   year = {2024},   month = {October},   publisher = {Mapineq deliverables. Turku: INVEST Research Flagship Centre / University of Turku},   doi = {10.5281/zenodo.13864000}, }"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get univariate or bivariate data for a specific source — mi_data","title":"Get univariate or bivariate data for a specific source — mi_data","text":"Fetches univariate bivariate data given source, year, NUTS level, selected filters.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get univariate or bivariate data for a specific source — mi_data","text":"","code":"mi_data(   x_source,   y_source = NULL,   year,   level,   x_filters = list(),   y_filters = NULL,   limit = 2000 )"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get univariate or bivariate data for a specific source — mi_data","text":"x_source character string specifying source name x variable. y_source (Optional) character string specifying source name y variable. year character integer specifying year. level character string specifying NUTS level (\"0\", \"1\", \"2\", \"3\"). x_filters named list names filter fields x variable values selected values fields. Default empty list. y_filters (Optional) named list names filter fields y variable values selected values fields. Default NULL. limit integer specifying maximum number results return. Default 2000.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get univariate or bivariate data for a specific source — mi_data","text":"tibble following columns: univariate data (y_source provided): best_year: best available year, closest requested year. geo: code NUTS region requested level. geo_name: name NUTS region requested level. x: value univariate variable. bivariate data (y_source provided): best_year: best available year, closest requested year (x y variables). geo: code NUTS region requested level. geo_name: name NUTS region requested level. x: value x variable. y: value y variable.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get univariate or bivariate data for a specific source — mi_data","text":"","code":"if (FALSE) { # \\dontrun{ # Univariate example mi_data(   x_source = \"TGS00010\",   year = 2020,   level = \"2\",   x_filters = list(isced11 = \"TOTAL\", unit = \"PC\", age = \"Y_GE15\", freq = \"A\") )  # Bivariate example mi_data(   x_source = \"TGS00010\",   y_source = \"DEMO_R_MLIFEXP\",   year = 2020,   level = \"2\",   x_filters = list(isced11 = \"TOTAL\", unit = \"PC\", age = \"Y_GE15\", freq = \"A\"),   y_filters = list(unit = \"YR\", age = \"Y_LT1\", freq = \"A\") ) } # }"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_nuts_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of available NUTS levels — mi_nuts_levels","title":"Get a list of available NUTS levels — mi_nuts_levels","text":"Get list available NUTS levels","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_nuts_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of available NUTS levels — mi_nuts_levels","text":"","code":"mi_nuts_levels()"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_nuts_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of available NUTS levels — mi_nuts_levels","text":"character vector valid NUTS levels accepted functions.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_nuts_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of available NUTS levels — mi_nuts_levels","text":"","code":"if (FALSE) { # \\dontrun{ mi_nuts_levels() } # }"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NUTS level and Year coverage for a specific source — mi_source_coverage","title":"Get NUTS level and Year coverage for a specific source — mi_source_coverage","text":"Get NUTS level Year coverage specific data source.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NUTS level and Year coverage for a specific source — mi_source_coverage","text":"","code":"mi_source_coverage(source_name, limit = 1500)"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NUTS level and Year coverage for a specific source — mi_source_coverage","text":"source_name name data source limit integer specifying maximum number results return. Default 2000.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NUTS level and Year coverage for a specific source — mi_source_coverage","text":"tibble containing following columns: nuts_level: NUTS level year: year source_name: name data source (mathces source_name requested user) short_description: short description data source description: description data source","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NUTS level and Year coverage for a specific source — mi_source_coverage","text":"","code":"if (FALSE) { # \\dontrun{ mi_source_coverage(\"BD_HGNACE2_R3\")  mi_source_coverage(\"ghs_smod\") } # }"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get column values for filtering a source — mi_source_filters","title":"Get column values for filtering a source — mi_source_filters","text":"Fetches possible filtering values given source, year, NUTS level.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get column values for filtering a source — mi_source_filters","text":"","code":"mi_source_filters(source_name, year, level, filters = list(), limit = 40)"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get column values for filtering a source — mi_source_filters","text":"source_name character string specifying source name (f_resource). year character integer specifying year. level character string specifying NUTS level (\"0\", \"1\", \"2\", \"3\"). filters named list names filter fields values selected values fields. Default empty list. limit integer specifying maximum number results return. Default 2000.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get column values for filtering a source — mi_source_filters","text":"tibble fields, labels, possible values filtering.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_source_filters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get column values for filtering a source — mi_source_filters","text":"","code":"if (FALSE) { # \\dontrun{ mi_source_filters(   source_name = \"DEMO_R_FIND2\",   year = 2020,   level = \"2\",   filters = list(unit = \"YR\") ) } # }"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of available data sources — mi_sources","title":"Get a list of available data sources — mi_sources","text":"Get list available data sources","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of available data sources — mi_sources","text":"","code":"mi_sources(level, year = NULL, limit = 1000)"},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_sources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of available data sources — mi_sources","text":"level character string specifying NUTS level (\"0\", \"1\", \"2\", \"3\"). can also always check valid NUTS levels using mi_nuts_levels. year integer length 1, specifying year. Optional. limit integer specifying maximum number results return. Default 2000.","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of available data sources — mi_sources","text":"tibble sources following columns: source_name: name data source short_description: short description data source description: description data source","code":""},{"path":"http://www.ekotov.pro/mapineqr/reference/mi_sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of available data sources — mi_sources","text":"","code":"if (FALSE) { # \\dontrun{ # get up to 10 sources for NUTS level 3 mi_sources(\"3\", limit = 10)  # get all sources for NUTS level 3 and year 2020 mi_sources(\"3\", year = 2020)  } # }"}]
